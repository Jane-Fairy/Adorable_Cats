// Code generated by goctl. DO NOT EDIT.
// Source: usercenter.proto

package server

import (
	"context"

	"catroom/app/usercenter/cmd/rpc/internal/logic"
	"catroom/app/usercenter/cmd/rpc/internal/svc"
	"catroom/app/usercenter/cmd/rpc/pb"
)

type UsercenterServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedUsercenterServer
}

func NewUsercenterServer(svcCtx *svc.ServiceContext) *UsercenterServer {
	return &UsercenterServer{
		svcCtx: svcCtx,
	}
}

func (s *UsercenterServer) Login(ctx context.Context, in *pb.LoginReq) (*pb.LoginResp, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UsercenterServer) Register(ctx context.Context, in *pb.RegisterReq) (*pb.RegisterResp, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *UsercenterServer) GetUserInfo(ctx context.Context, in *pb.GetUserInfoReq) (*pb.GetUserInfoResp, error) {
	l := logic.NewGetUserInfoLogic(ctx, s.svcCtx)
	return l.GetUserInfo(in)
}

func (s *UsercenterServer) GetUserAuthByAuthKey(ctx context.Context, in *pb.GetUserAuthByAuthKeyReq) (*pb.GetUserAuthByAuthKeyResp, error) {
	l := logic.NewGetUserAuthByAuthKeyLogic(ctx, s.svcCtx)
	return l.GetUserAuthByAuthKey(in)
}

func (s *UsercenterServer) GetUserAuthByUserId(ctx context.Context, in *pb.GetUserAuthByUserIdReq) (*pb.GetUserAuthyUserIdResp, error) {
	l := logic.NewGetUserAuthByUserIdLogic(ctx, s.svcCtx)
	return l.GetUserAuthByUserId(in)
}

func (s *UsercenterServer) GenerateToken(ctx context.Context, in *pb.GenerateTokenReq) (*pb.GenerateTokenResp, error) {
	l := logic.NewGenerateTokenLogic(ctx, s.svcCtx)
	return l.GenerateToken(in)
}

func (s *UsercenterServer) PetInsert(ctx context.Context, in *pb.PetReq) (*pb.PetResp, error) {
	l := logic.NewPetInsertLogic(ctx, s.svcCtx)
	return l.PetInsert(in)
}

func (s *UsercenterServer) PetDelete(ctx context.Context, in *pb.PetReq) (*pb.StatusInfo, error) {
	l := logic.NewPetDeleteLogic(ctx, s.svcCtx)
	return l.PetDelete(in)
}

func (s *UsercenterServer) FindPetOne(ctx context.Context, in *pb.PetReq) (*pb.PetResp, error) {
	l := logic.NewFindPetOneLogic(ctx, s.svcCtx)
	return l.FindPetOne(in)
}

func (s *UsercenterServer) PetEdit(ctx context.Context, in *pb.PetReq) (*pb.StatusInfo, error) {
	l := logic.NewPetEditLogic(ctx, s.svcCtx)
	return l.PetEdit(in)
}
