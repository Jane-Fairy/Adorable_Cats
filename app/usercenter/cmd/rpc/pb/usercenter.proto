syntax = "proto3";

option go_package = "./pb";

package pb;

import "google/protobuf/timestamp.proto";

//model
message User {
  int64 id = 1;
  string mobile = 2;
  string nickname = 3;
  int64  sex = 4;
  string avatar = 5;
  string info = 6;
}

message UserAuth {
  int64  id = 1;
  int64  userId = 2;
  string authType = 3;
  string authKey = 4;
}


//req 、resp
message RegisterReq {
  string mobile = 1;
  string nickname = 2;
  string password = 3;
  string authKey = 4;
  string authType = 5;
}
message RegisterResp {
  string accessToken = 1;
  int64  accessExpire = 2;
  int64  refreshAfter = 3;
}

message LoginReq {
  string  authType = 1;
  string authKey = 2;
  string  password = 3;
}
message LoginResp {
  string accessToken = 1;
  int64  accessExpire = 2;
  int64  refreshAfter = 3;
}

message GetUserInfoReq {
  int64  id = 1;
}
message GetUserInfoResp {
  User user = 1;
}

message GetUserAuthByAuthKeyReq {
  string  authKey = 1;
  string  authType = 2;
}
message GetUserAuthByAuthKeyResp {
  UserAuth userAuth = 1;
}

message GetUserAuthByUserIdReq {
  int64  userId = 1;
  string  authType = 2;
}
message GetUserAuthyUserIdResp {
  UserAuth userAuth = 1;
}

message GenerateTokenReq {
  int64 userId = 1;
}
message GenerateTokenResp {
  string accessToken = 1;
  int64  accessExpire = 2;
  int64  refreshAfter = 3;
}

message PetReq {
  string id = 1;
  string name = 2;
  string type = 3;
  string breed = 4;
  string date_of_birth = 5;
  string gender = 6;
  string owner_name = 7;
  string owner_contact = 8;
  string note = 9;
}

message PetResp {
  string id = 1;
  string name = 2;
  string type = 3;
  string breed = 4;
  string  date_of_birth = 5;
  string gender = 6;
  string owner_name = 7;
  string owner_contact = 8;
  string note = 9;
  string create_time = 10;
  string update_time = 11;
  string delete_time = 12;
  int64 del_state = 13;
  int64 version = 14;
}
message StatusInfo {
  bool isSuccess = 1;
}



message CatOrder {
  int64  id = 1;
  string sn = 2;
  int64  userId = 3;
  int64  homestayId = 4;
  string title = 5;
  string subTitle = 6;
  string cover = 7;
  string info = 8;
  int64 peopleNum = 9;
  int64 rowType = 10;
  string foodInfo = 11;
  int64 foodPrice = 12;
  int64 homestayPrice = 13;
  int64 marketCatPrice = 14;
  int64 homestayBusinessId = 15;
  int64 homestayUserId = 16;
  int64 liveStartDate = 17;
  int64 liveEndDate = 18;
  int64 livePeopleNum = 19;
  int64 tradeState = 20;
  string tradeCode = 21;
  string remark = 22;
  int64 orderTotalPrice = 23;
  int64 foodTotalPrice = 24;
  int64 homestayTotalPrice = 25;
  int64 createTime = 26;
  int64 needFood = 27;
}

message CreateCatOrderReq {
  int64  homestayId = 1;
  bool   isFood = 2;
  int64  liveStartTime = 3;
  int64  liveEndTime = 4;
  int64  userId = 5;
  int64  livePeopleNum = 6;
  string remark = 7;
}
message CreateCatOrderResp {
  string sn = 1;
}


message  CatOrderDetailReq{
  string sn = 1;
}
message  CatOrderDetailResp{
  CatOrder homestayOrder= 1;
}

message  UpdateCatOrderTradeStateReq{
  string sn = 1;
  int64  tradeState = 2;  //-1: 已取消 0:待支付 1:未使用 2:已使用  3:已过关闭
}

message  UpdateCatOrderTradeStateResp{
  int64  id = 1;
  int64  userId = 2;
  string sn = 3;
  string tradeCode = 4;
  int64  liveStartDate = 5;
  int64  liveEndDate = 6;
  int64  orderTotalPrice = 7;
  string title = 8;
}


message UserCatOrderListReq {
  int64           lastId = 1;
  int64           pageSize = 2;
  int64           userId = 3;
  int64           traderState = 4;
}
message UserCatOrderListResp {
  repeated CatOrder list = 1;
}




//service
service usercenter {

  rpc login(LoginReq) returns(LoginResp);
  rpc register(RegisterReq) returns(RegisterResp);
  rpc getUserInfo(GetUserInfoReq) returns(GetUserInfoResp);
  rpc getUserAuthByAuthKey(GetUserAuthByAuthKeyReq) returns(GetUserAuthByAuthKeyResp);
  rpc getUserAuthByUserId(GetUserAuthByUserIdReq) returns(GetUserAuthyUserIdResp);
  rpc generateToken(GenerateTokenReq) returns(GenerateTokenResp);
  //rpc rpc(LoginReq) returns(LoginResp);

  rpc petInsert(PetReq) returns (PetResp);
  rpc petDelete(PetReq) returns (StatusInfo);
  rpc findPetOne(PetReq) returns (PetResp);
  rpc petEdit(PetReq) returns (StatusInfo);



  //Order rpc doc
  rpc catOrderCreate(CreateCatOrderReq)returns(CreateCatOrderResp);
  //cat order detail information
  rpc catOrderDetail(CatOrderDetailReq)returns(CatOrderDetailResp);
  //update cat order detail information
  rpc catOrderTradeStateUpdate(UpdateCatOrderTradeStateReq)returns(UpdateCatOrderTradeStateResp);
  //oder detail list info
  rpc catUserOrderList(UserCatOrderListReq)returns(UserCatOrderListResp);
}

