syntax = "proto3";

option go_package = "./pb";

package pb;


//model
message User {
  int64 id = 1;
  string mobile = 2;
  string nickname = 3;
  int64  sex = 4;
  string avatar = 5;
  string info = 6;
}

message UserAuth {
  int64  id = 1;
  int64  userId = 2;
  string authType = 3;
  string authKey = 4;
}


//req „ÄÅresp
message RegisterReq {
  string mobile = 1;
  string nickname = 2;
  string password = 3;
  string authKey = 4;
  string authType = 5;
}
message RegisterResp {
  string accessToken = 1;
  int64  accessExpire = 2;
  int64  refreshAfter = 3;
}

message LoginReq {
  string  authType = 1;
  string authKey = 2;
  string  password = 3;
}
message LoginResp {
  string accessToken = 1;
  int64  accessExpire = 2;
  int64  refreshAfter = 3;
}

message GetUserInfoReq {
  int64  id = 1;
}
message GetUserInfoResp {
  User user = 1;
}

message GetUserAuthByAuthKeyReq {
  string  authKey = 1;
  string  authType = 2;
}
message GetUserAuthByAuthKeyResp {
  UserAuth userAuth = 1;
}

message GetUserAuthByUserIdReq {
  int64  userId = 1;
  string  authType = 2;
}
message GetUserAuthyUserIdResp {
  UserAuth userAuth = 1;
}

message GenerateTokenReq {
  int64 userId = 1;
}
message GenerateTokenResp {
  string accessToken = 1;
  int64  accessExpire = 2;
  int64  refreshAfter = 3;
}

message PetReq {
  string id = 1;
  string name = 2;
  string type = 3;
  string breed = 4;
  string date_of_birth = 5;
  string gender = 6;
  string owner_name = 7;
  string owner_contact = 8;
  string note = 9;
}

message PetResp {
  string id = 1;
  string name = 2;
  string type = 3;
  string breed = 4;
  string date_of_birth = 5;
  string gender = 6;
  string owner_name = 7;
  string owner_contact = 8;
  string note = 9;
  string create_string = 10;
  string update_string = 11;
  string delete_string = 12;
  int64 del_state = 13;
  int64 version = 14;
}
message StatusInfo {
  bool isSuccess = 1;
}


//service
service usercenter {
  rpc login(LoginReq) returns(LoginResp);
  rpc register(RegisterReq) returns(RegisterResp);
  rpc getUserInfo(GetUserInfoReq) returns(GetUserInfoResp);
  rpc getUserAuthByAuthKey(GetUserAuthByAuthKeyReq) returns(GetUserAuthByAuthKeyResp);
  rpc getUserAuthByUserId(GetUserAuthByUserIdReq) returns(GetUserAuthyUserIdResp);
  rpc generateToken(GenerateTokenReq) returns(GenerateTokenResp);
  //rpc rpc(LoginReq) returns(LoginResp);

  rpc petInsert(PetReq) returns (PetResp);
  rpc petDelete(PetReq) returns (StatusInfo);
  rpc findPetOne(PetReq) returns (PetResp);
  rpc petEdit(PetReq) returns (StatusInfo);
}

service usercenter2 {
  rpc logintwo(LoginReq) returns(LoginResp);
  rpc registertwo(RegisterReq) returns(RegisterResp);
}