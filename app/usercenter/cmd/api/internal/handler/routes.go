// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"
	"time"

	CatOrder "catroom/app/usercenter/cmd/api/internal/handler/CatOrder"
	payment "catroom/app/usercenter/cmd/api/internal/handler/payment"
	pet "catroom/app/usercenter/cmd/api/internal/handler/pet"
	user "catroom/app/usercenter/cmd/api/internal/handler/user"
	"catroom/app/usercenter/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/user/register",
				Handler: user.RegisterHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/login",
				Handler: user.LoginHandler(serverCtx),
			},
		},
		rest.WithPrefix("/user-center/v1"),
		rest.WithTimeout(10000*time.Millisecond),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/user/detail",
				Handler: user.DetailHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/wxMiniAuth",
				Handler: user.WxMiniAuthHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/user-center/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/pet/insert",
				Handler: pet.PetInsertHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/delete",
				Handler: pet.PetDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/pet/find",
				Handler: pet.FindPetOneHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/pet/edit",
				Handler: pet.PetEditHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/cat-center/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/thirdPayment/thirdPaymentWxPayCallback",
				Handler: payment.ThirdPaymentWxPayCallbackHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/cat-center/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/thirdPayment/thirdPaymentWxPay",
				Handler: payment.ThirdPaymentWxPayHandler(serverCtx),
			},
		},
		rest.WithPrefix("/cat-center/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/CatOrder/createCatOrder",
				Handler: CatOrder.CreateCatOrderHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/CatOrder/userCatOrderList",
				Handler: CatOrder.UserCatOrderListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/CatOrder/userCatOrderDetail",
				Handler: CatOrder.UserCatOrderDetailHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/order/v1"),
	)
}
